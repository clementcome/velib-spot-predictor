name: Release control

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, closed]
    branches:
      - main*


jobs:

  release-control:
    runs-on: ubuntu-latest
    outputs:
      bump_version: ${{ steps.check-pr-title.outputs.bump_version }}
      base_branch_version: ${{ steps.get-version.outputs.base_branch_version }}
      head_branch_version: ${{ steps.get-version.outputs.head_branch_version }}

    steps:
    - name: Check PR Title and Determine Version Bump
      id: check-pr-title
      run: |
        PR_TITLE=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")
        echo "PR Title: $PR_TITLE"
        if [[ $PR_TITLE =~ (patch|minor|major) ]]; then
          echo "Version bump keyword found: ${BASH_REMATCH[0]}"
          echo "bump_version=${BASH_REMATCH[0]}" >> $GITHUB_OUTPUT
        else
          echo "No version bump keyword (patch, minor, or major) found in the PR title."
          exit 1
        fi

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9.17

    - name: Install poetry
      run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.4.2

    - name: Get version of base and head branch
      id: get-version
      run: |
        git fetch --prune --unshallow
        NEXT_PATCH_VERSION=$(poetry version patch -s --dry-run)
        echo "Head branch version: $NEXT_PATCH_VERSION"
        echo "head_branch_version=$NEXT_PATCH_VERSION" >> $GITHUB_OUTPUT
        git checkout ${{ github.base_ref }}
        NEXT_PATCH_VERSION=$(poetry version patch -s --dry-run)
        echo "Base branch version: $NEXT_PATCH_VERSION"
        echo "base_branch_version=$NEXT_PATCH_VERSION" >> $GITHUB_OUTPUT
        # git checkout ${{ github.head_ref }}
    - name: Compare versions
      id: compare-versions
      run: |
        BASE_BRANCH_VERSION="${{ steps.get-version.outputs.base_branch_version }}"
        HEAD_BRANCH_VERSION="${{ steps.get-version.outputs.head_branch_version }}"
        echo "Base branch version: $BASE_BRANCH_VERSION"
        echo "Head branch version: $HEAD_BRANCH_VERSION"
        if [[ "$BASE_BRANCH_VERSION" == "$HEAD_BRANCH_VERSION" ]]; then
          echo "Base branch version and head branch version are the same modulo pre-release."
        else
          echo "Base branch version and head branch version differ by more than a pre-release."
          exit 1
        fi
